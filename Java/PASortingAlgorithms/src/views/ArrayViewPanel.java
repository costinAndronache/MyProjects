/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.awt.*;

/**
 *
 * @author Costinel
 */
public class ArrayViewPanel extends javax.swing.JPanel 
{

    private int[] arr;
    private int spacing;
    private int rectangleWidth;
    private float multiplier;
    Color color;
    
    boolean finished = false;
    /**
     * Creates new form ArrayViewPanel
     */
    public ArrayViewPanel() 
    {
        initComponents();
        this.finishedLabel.setVisible(false);

    }
    
    public void setSettings(int spacing, int rectangleWidth, Color color, float multiplier)
    {
        this.spacing = spacing;
        this.rectangleWidth = rectangleWidth;
        this.color = color;
        this.multiplier = multiplier;
    }
    
    public void displayFinished()
    {
        this.finishedLabel.setVisible(true);
        this.finished = true;
        this.repaint();
    }
    
    public void hideFinished()
    {
        this.finishedLabel.setVisible(false);
        this.repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        finishedLabel = new javax.swing.JLabel();

        finishedLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        finishedLabel.setForeground(new java.awt.Color(255, 0, 0));
        finishedLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        finishedLabel.setText("Finished");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(finishedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 334, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(finishedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 270, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel finishedLabel;
    // End of variables declaration//GEN-END:variables

    public void drawArray(int[] arr)
    {
        this.arr = arr;
        this.resize();
        this.repaint();
    }
    
    public void resize()
    {
        if(this.arr == null)
            return;
        
        Dimension d = this.getSize();
        
        int max = this.arr[0];
        for(int i=1; i<this.arr.length; i++)
            if(arr[i] > max)
                max = arr[i];
        
        d.setSize(this.arr.length * (this.rectangleWidth + this.spacing) , this.multiplier * max);
    }
    
    @Override
    public void paint(Graphics g)
    {
        
        super.paint(g);
        if(this.arr == null)
            return;
        
        Color  c = this.color != null? this.color : Color.green;
        g.setColor(c);
        for(int i =0; i < this.arr.length; i++)
        {
            
            int height = (int)(this.arr[i] * this.multiplier);
            int width = this.rectangleWidth;
            
            
            int y = (int)this.getSize().getHeight() - height;
            int x = 5 + i * (this.spacing + this.rectangleWidth);
            
            g.fill3DRect(x, y, width, height, true);
        }
        
        if(this.finished)
        {
            g.setFont(Font.getFont(Font.SANS_SERIF));
            g.drawString("FINISHED", 0, 0);
        }
    }
    
}
