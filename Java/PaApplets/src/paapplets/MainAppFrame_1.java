/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paapplets;
import java.util.*;
import views.*;
import com.fathzer.soft.javaluator.*;
import javax.swing.JPanel;
import org.apache.commons.math3.analysis.polynomials.*;

/**
 *
 * @author Costin
 */
public class MainAppFrame_1 extends javax.swing.JPanel {

    /**
     * Creates new form MainAppFrame
     */
    public MainAppFrame_1() {
        initComponents();
        
        this.currentLocale = this.roLocale = new Locale("ro", "RO");
        this.enLocale = new Locale("en", "US");
        
        this.currentBundle = ResourceBundle.getBundle("Properties", currentLocale);
        this.setupWithBundle(currentBundle);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        functionTF2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        graphPanel = new views.GraphPanel();
        zoomInBtn = new javax.swing.JButton();
        zoomOutBtn = new javax.swing.JButton();
        dataBtn = new javax.swing.JButton();
        startTF = new javax.swing.JTextField();
        functionBtn = new javax.swing.JButton();
        functionLabel = new javax.swing.JLabel();
        functionTF = new javax.swing.JTextField();
        startLabel = new javax.swing.JLabel();
        stopTF = new javax.swing.JTextField();
        stopLabel = new javax.swing.JLabel();
        stepTF = new javax.swing.JTextField();
        stepLabel = new javax.swing.JLabel();
        interpolateBtn = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        clearBtnPressed = new javax.swing.JButton();
        localeBtn = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(640, 480));

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 451, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(graphPanel);

        zoomInBtn.setText("Zoom in");
        zoomInBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zoomInBtnMouseClicked(evt);
            }
        });

        zoomOutBtn.setText("Zoom out");
        zoomOutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zoomOutBtnMouseClicked(evt);
            }
        });

        dataBtn.setText("Fill with data");
        dataBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataBtnMouseClicked(evt);
            }
        });

        functionBtn.setText("From function");
        functionBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                functionBtnMouseClicked(evt);
            }
        });

        functionLabel.setText("Function:");

        startLabel.setText("Start:");

        stopLabel.setText("Stop:");

        stepLabel.setText("Step:");

        interpolateBtn.setText("Interpolate");
        interpolateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                interpolateBtnMouseClicked(evt);
            }
        });

        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusLabel.setText("Status:");
        statusLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        clearBtnPressed.setText("Clear red points");
        clearBtnPressed.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearBtnPressedMouseClicked(evt);
            }
        });

        localeBtn.setText("Change locale");
        localeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                localeBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(zoomInBtn)
                                .addGap(18, 18, 18)
                                .addComponent(dataBtn)
                                .addGap(10, 10, 10)
                                .addComponent(clearBtnPressed, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(functionBtn)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(functionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(functionTF, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(startTF, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(startLabel))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stopTF, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stopLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stepLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(stepTF, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(interpolateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(zoomOutBtn)
                            .addComponent(localeBtn))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(functionLabel)
                    .addComponent(startLabel)
                    .addComponent(stopLabel)
                    .addComponent(stepLabel))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(functionBtn)
                        .addComponent(functionTF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(stopTF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(stepTF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(interpolateBtn)
                        .addComponent(localeBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zoomInBtn)
                    .addComponent(zoomOutBtn)
                    .addComponent(dataBtn)
                    .addComponent(clearBtnPressed)
                    .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void zoomInBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zoomInBtnMouseClicked
        // TODO add your handling code here:
        
        this.graphPanel.zoomIn();
        this.jScrollPane1.revalidate();
        this.jScrollPane1.repaint();
        this.repaint();
        
        if(this.listener != null)
        {
            int zoomStep = this.graphPanel.getZoomLevel();
            this.listener.mainAppPanelDidChangeZoomStep(zoomStep);
        }
        
    }//GEN-LAST:event_zoomInBtnMouseClicked

    private void zoomOutBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zoomOutBtnMouseClicked
        // TODO add your handling code here:
        
        this.graphPanel.zoomOut();
        this.jScrollPane1.revalidate();
        this.jScrollPane1.repaint();
        this.repaint();
        
        if(this.listener != null)
        {
            int zoomStep = this.graphPanel.getZoomLevel();
            this.listener.mainAppPanelDidChangeZoomStep(zoomStep);
        }
        
    }//GEN-LAST:event_zoomOutBtnMouseClicked

    private void dataBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataBtnMouseClicked
        // TODO add your handling code here:
        
        List<RealPoint> list = this.graphPanel.getListOfDrawnPoints();
        System.out.println("size of drawn points list " + list.size());
        
        
        this.currentAnnotationList = this.makeAnnotationListFromPoints(list);
        this.graphPanel.setAnnotationList(this.currentAnnotationList);
        
    }//GEN-LAST:event_dataBtnMouseClicked

    private void functionBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_functionBtnMouseClicked
        // TODO add your handling code here:
        
       String expr = this.functionTF.getText();
       double start = Double.parseDouble(startTF.getText());
       double stop = Double.parseDouble(stopTF.getText());
       double step = Double.parseDouble(stepTF.getText());
       List<RealPoint> points = this.makeListOfPointsFrom(expr, start, stop, step);
       
       RealPoint p[] = new RealPoint[points.size()];
       
       this.graphPanel.setPointsToDraw(points.toArray(p));
       
    }//GEN-LAST:event_functionBtnMouseClicked

    private void interpolateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_interpolateBtnMouseClicked
        // TODO add your handling code here:
        
        List<RealPoint> points = this.graphPanel.getListOfDrawnPoints();
        
        System.out.println("Points " + points);
        
        PolynomialFunctionLagrangeForm form;
        double x[] = new double[points.size()];
        double y[] = new double[points.size()];
        for(int i=0; i<points.size(); i++)
        {
            RealPoint p = points.get(i);
            x[i] = p.getX();
            y[i] = p.getY();
        }
        
        try{
        
        form = new PolynomialFunctionLagrangeForm(x, y);
        
        
        points.clear();
        
        for(double i= - 100; i<=100; i=i+0.1)
        {
            double yval = form.value(i);
            RealPoint p = new RealPoint(i, yval);
            points.add(p);
        }
        
        RealPoint newPoints[] = new RealPoint[points.size()];
        newPoints = points.toArray(newPoints);
        
        System.out.println("a ok so far");
        
        this.graphPanel.setPointsToDraw(newPoints);
        }catch(Exception e)
        {
            this.statusLabel.setText(e.getClass().toString());
        }
    }//GEN-LAST:event_interpolateBtnMouseClicked

    private void clearBtnPressedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearBtnPressedMouseClicked
        // TODO add your handling code here:
        
        this.graphPanel.clearAnnotations();
        this.graphPanel.clearDrawnPoints();
        this.graphPanel.setPointsToDraw(null);
        this.graphPanel.clearDrawnPoints();
        
        this.graphPanel.repaint();
        this.statusLabel.setText("Cleared");
        
    }//GEN-LAST:event_clearBtnPressedMouseClicked

    private void localeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_localeBtnMouseClicked
        // TODO add your handling code here:
        
        if(this.currentLocale == this.roLocale)
        {
            this.currentLocale = this.enLocale;
        }
        else
        {
            this.currentLocale = this.roLocale;
        }
        
        this.currentBundle = ResourceBundle.getBundle("Properties", this.currentLocale);
        this.setupWithBundle(currentBundle);
        
        if(this.currentAnnotationList != null)
        {
            this.graphPanel.clearAnnotations();
            List<RealPoint> pointsList = new ArrayList<>();
            
            for(Annotation ann : this.currentAnnotationList)
            {
                pointsList.add(ann.getPoint());
            }
            
            this.currentAnnotationList = this.makeAnnotationListFromPoints(pointsList);
            this.graphPanel.setAnnotationList(currentAnnotationList);
        }
        
    }//GEN-LAST:event_localeBtnMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearBtnPressed;
    private javax.swing.JButton dataBtn;
    private javax.swing.JButton functionBtn;
    private javax.swing.JLabel functionLabel;
    private javax.swing.JTextField functionTF;
    private javax.swing.JTextField functionTF2;
    private views.GraphPanel graphPanel;
    private javax.swing.JButton interpolateBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton localeBtn;
    private javax.swing.JLabel startLabel;
    private javax.swing.JTextField startTF;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel stepLabel;
    private javax.swing.JTextField stepTF;
    private javax.swing.JLabel stopLabel;
    private javax.swing.JTextField stopTF;
    private javax.swing.JButton zoomInBtn;
    private javax.swing.JButton zoomOutBtn;
    // End of variables declaration//GEN-END:variables


    private ResourceBundle currentBundle;
    private Locale currentLocale;
    private Locale enLocale, roLocale;
    private List<Annotation> currentAnnotationList;
    private MainnAppPanelListener listener;
    
    private void setupWithBundle(ResourceBundle bundle)
    {
        this.zoomInBtn.setText(bundle.getString("zoomInText"));
        this.zoomOutBtn.setText(bundle.getString("zoomOutText"));
        this.functionBtn.setText(bundle.getString("fromFunctionText"));
        this.interpolateBtn.setText(bundle.getString("interpolateText"));
        this.functionLabel.setText(bundle.getString("functionText"));
        this.startLabel.setText(bundle.getString("startText"));
        this.stopLabel.setText(bundle.getString("stopText"));
        this.stepLabel.setText(bundle.getString("stepText"));
        this.dataBtn.setText(bundle.getString("fillWithDataText"));
        this.localeBtn.setText(bundle.getString("changeLocaleText"));
        //this.clearBtnPressed.setText(bundle.getString("clearText"));
    }
    
    private List<RealPoint> makeListOfPointsFrom(String exp, double start, double stop, double step)
    {
        DoubleEvaluator eval = new DoubleEvaluator();
        List<RealPoint> points = new ArrayList<>();
        
        StaticVariableSet<Double> set = new StaticVariableSet<>();
        
        System.out.println("The expression is " +  exp);
        
        for(double i = start; i<=stop; i = i + step)
        {
           set.set("x", i);
           double y = eval.evaluate(exp, set);
           
           RealPoint p = new RealPoint(i ,y);
           
           p = this.graphPanel.getNormalizedPointFrom(p);
           
           points.add(p);
           
        }
        
        
        return points;
    }
    
    private List<Annotation> makeAnnotationListFromPoints(List<RealPoint> list)
    {
        
        List<Annotation> annList = new ArrayList<>();
        
        Date d = new Date();
        
        Calendar c = new GregorianCalendar();
        
        int i = 1;
        double currency = 10;
        for(RealPoint p : list)
        {   
            c.set(2015, i, 1);
            Date d1 = c.getTime();
 
            Annotation a = new Annotation(LocaleUtilities.printDate(this.currentLocale, d1),
                                 LocaleUtilities.printCurrency(currentLocale, currency),p);
            
            i = i+1;
            currency += 5.6;
            annList.add(a);
        }
        return annList;
    }
    
    private void pack()
    {
        
    }
    
    private JPanel getContentPane()
    {
        return this;
    }
    
    private void setDefaultCloseOperation(int x)
    {
        
    }
    
    public void setZoomTo(int zoomStep)
    {
        this.graphPanel.setZoomLevel(zoomStep);
        this.jScrollPane1.revalidate();
        this.jScrollPane1.repaint();
        this.repaint();
    }
    
    public void setListener(MainnAppPanelListener listener)
    {
        this.listener = listener;
    }
    
    
    public void setModeFunctionInput()
    {
        this.interpolateBtn.setVisible(false);
        this.dataBtn.setVisible(false);
    }
    
    public void setModeFunctionInterpolate()
    {
        this.functionBtn.setVisible(false);
        this.functionLabel.setVisible(false);
        this.functionTF.setVisible(false);
        this.functionTF2.setVisible(false);
        
        this.startLabel.setVisible(false);
        this.stopLabel.setVisible(false);
        this.stepLabel.setVisible(false);
        
        this.startTF.setVisible(false);
        this.stepTF.setVisible(false);
        this.stopTF.setVisible(false);
        
    }
    
}
