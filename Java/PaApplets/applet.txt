/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paapplets;
import java.util.*;
import views.*;
import com.fathzer.soft.javaluator.*;
import org.apache.commons.math3.analysis.polynomials.*;

/**
 *
 * @author Costinel
 */
public class MainAppFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainAppFrame
     */
    public MainAppFrame() {
        initComponents();
        
        RealPoint p[] = new RealPoint[100];
        for(int i=0; i<100; i++)
        {
            p[i] = new RealPoint(i, i);
            
        }
        
        this.graphPanel.setPointsToDraw(p);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        functionTF2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        graphPanel = new views.GraphPanel();
        zoomInBtn = new javax.swing.JButton();
        zoomOutBtn = new javax.swing.JButton();
        dataBtn = new javax.swing.JButton();
        startTF = new javax.swing.JTextField();
        functionBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        functionTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        stopTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        stepTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        interpolateBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(640, 480));

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 451, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(graphPanel);

        zoomInBtn.setText("Zoom in");
        zoomInBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zoomInBtnMouseClicked(evt);
            }
        });

        zoomOutBtn.setText("Zoom out");
        zoomOutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zoomOutBtnMouseClicked(evt);
            }
        });

        dataBtn.setText("Fill with data");
        dataBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataBtnMouseClicked(evt);
            }
        });

        functionBtn.setText("From function");
        functionBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                functionBtnMouseClicked(evt);
            }
        });

        jLabel1.setText("Function:");

        jLabel2.setText("Start:");

        jLabel3.setText("Stop:");

        jLabel4.setText("Step:");

        interpolateBtn.setText("Interpolate");
        interpolateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                interpolateBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 758, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(zoomInBtn)
                        .addGap(18, 18, 18)
                        .addComponent(dataBtn)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(zoomOutBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(functionBtn)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(functionTF, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startTF, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stopTF, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(stepTF, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(interpolateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startTF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(functionBtn)
                    .addComponent(functionTF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stopTF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stepTF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(interpolateBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zoomInBtn)
                    .addComponent(zoomOutBtn)
                    .addComponent(dataBtn))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void zoomInBtnMouseClicked(java.awt.event.MouseEvent evt) {                                       
        // TODO add your handling code here:
        
        this.graphPanel.zoomIn();
        this.jScrollPane1.revalidate();
        this.jScrollPane1.repaint();
        this.repaint();
    }                                      

    private void zoomOutBtnMouseClicked(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
        
        this.graphPanel.zoomOut();
        this.jScrollPane1.revalidate();
        this.jScrollPane1.repaint();
        this.repaint();
    }                                       

    private void dataBtnMouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        
        List<RealPoint> list = this.graphPanel.getListOfDrawnPoints();
        System.out.println("size of drawn points list " + list.size());
        this.graphPanel.clearDrawnPoints();
        
        List<Annotation> annList = new ArrayList<>();
        for(RealPoint p : list)
        {
            Annotation a = new Annotation("A key " + p.getX(), "A Value " + p.getY(), p);
            annList.add(a);
        }
        
        this.graphPanel.setAnnotationList(annList);
    }                                    

    private void functionBtnMouseClicked(java.awt.event.MouseEvent evt) {                                         
        // TODO add your handling code here:
        
       String expr = this.functionTF.getText();
       double start = Double.parseDouble(startTF.getText());
       double stop = Double.parseDouble(stopTF.getText());
       double step = Double.parseDouble(stepTF.getText());
       List<RealPoint> points = this.makeListOfPointsFrom(expr, start, stop, step);
       
       RealPoint p[] = new RealPoint[points.size()];
       
       this.graphPanel.setPointsToDraw(points.toArray(p));
       
    }                                        

    private void interpolateBtnMouseClicked(java.awt.event.MouseEvent evt) {                                            
        // TODO add your handling code here:
        
        
        
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainAppFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton dataBtn;
    private javax.swing.JButton functionBtn;
    private javax.swing.JTextField functionTF;
    private javax.swing.JTextField functionTF2;
    private views.GraphPanel graphPanel;
    private javax.swing.JButton interpolateBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField startTF;
    private javax.swing.JTextField stepTF;
    private javax.swing.JTextField stopTF;
    private javax.swing.JButton zoomInBtn;
    private javax.swing.JButton zoomOutBtn;
    // End of variables declaration                   


    private List<RealPoint> makeListOfPointsFrom(String exp, double start, double stop, double step)
    {
        DoubleEvaluator eval = new DoubleEvaluator();
        List<RealPoint> points = new ArrayList<>();
        
        StaticVariableSet<Double> set = new StaticVariableSet<>();
        
        System.out.println("The expression is " +  exp);
        
        for(double i = start; i<=stop; i = i + step)
        {
           set.set("x", i);
           double y = eval.evaluate(exp, set);
           
           RealPoint p = new RealPoint(i ,y);
           
           p = this.graphPanel.getNormalizedPointFrom(p);
           
           points.add(p);
           
        }
        
        
        return points;
    }

    
}
