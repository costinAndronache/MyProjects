/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Lab8PL;

import java.awt.*;

/**
 *
 * @author Costinel
 */
public class MapPanelView extends javax.swing.JPanel {

    /**
     * Creates new form MapPanelView
     */
    public MapPanelView() {
        initComponents();
        
        this.numOfLines = 4;
        this.numOfColumns = 3;
        this.rectDimension = new Dimension(50, 50);
        this.currentPoint = new Point(1, 1);
        
        this.freeColor = Color.gray;
        this.fullColor = Color.LIGHT_GRAY;
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


    private int numOfColumns;
    private int numOfLines;
    private Point currentPoint;
    private Dimension rectDimension;
    private Color freeColor;
    private Color fullColor;
    
    public void setColumns(int c)
    {
        this.numOfColumns = c;
    }
    
    public void setLines(int l)
    {
        this.numOfLines = l;
    }
    
    public void setCurrentPoint(Point p)
    {
        this.currentPoint = p;
        System.out.println(p);
    }
    
    
    
    @Override
    public void paint(Graphics g)
    {
        super.paint(g);
        
        g.setColor(this.freeColor);
        for(int i=0; i<this.numOfLines; i++)
            for(int j=0; j<this.numOfColumns; j++)
            {
                g.fill3DRect(
                        j * this.rectDimension.width, 
                        i * this.rectDimension.height, 
                        this.rectDimension.width, 
                        this.rectDimension.height, false);
            }
        
        
        g.setColor(this.fullColor);
        g.fill3DRect(this.currentPoint.y * this.rectDimension.width, 
                        this.currentPoint.x * this.rectDimension.height, 
                        this.rectDimension.width, 
                        this.rectDimension.height, true);
    }
    
}
