/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;
import models.*;
import managers.ApiManager;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import viewInterfaces.*;


/**
 *
 * @author costin
 */
public class MainAppFrame extends javax.swing.JFrame implements InfoTableListener,
        TrackDialogListener, StationDialogListener, TrainDialogListener, ConductorDialogListener,
        ScheduleDialogListener
{

    
    private ApiManager manager;
    /**
     * Creates new form MainAppFrame
     */
    public MainAppFrame() throws Exception {
        initComponents();
        
        this.manager = ApiManager.getSharedInstance();
        this.infoTablePanel.setListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        infoTablePanel = new views.InfoTablePanel();
        stationsBtn = new javax.swing.JButton();
        tracksBtn = new javax.swing.JButton();
        trainsBtn = new javax.swing.JButton();
        conductorsBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pageNoTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        countTF = new javax.swing.JTextField();
        createStationBtn = new javax.swing.JButton();
        createTrackBtn = new javax.swing.JButton();
        createTrainBtn = new javax.swing.JButton();
        createConductorBtn = new javax.swing.JButton();
        createScheduleBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        station1TF = new javax.swing.JTextField();
        station2TF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        startHourTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        stopHourTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        firstNameTF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lastNameTF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        trainNameTF = new javax.swing.JTextField();
        tracksBetweenStationsBtn = new javax.swing.JButton();
        trainsBetweenStationsBtn = new javax.swing.JButton();
        trainAtStationStart = new javax.swing.JButton();
        trainsAtStationAtStopBtn = new javax.swing.JButton();
        schedulesForTrain = new javax.swing.JButton();
        schedulesForConductor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        stationsBtn.setText("View All Stations");
        stationsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stationsBtnMouseClicked(evt);
            }
        });

        tracksBtn.setText("View All Tracks");
        tracksBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tracksBtnMouseClicked(evt);
            }
        });

        trainsBtn.setText("View All Trains");
        trainsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trainsBtnMouseClicked(evt);
            }
        });

        conductorsBtn.setText("View All Conductors");
        conductorsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                conductorsBtnMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Start row");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Count");

        createStationBtn.setText("Create Station");
        createStationBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createStationBtnMouseClicked(evt);
            }
        });

        createTrackBtn.setText("Create Track");
        createTrackBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createTrackBtnMouseClicked(evt);
            }
        });

        createTrainBtn.setText("Create Train");
        createTrainBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createTrainBtnMouseClicked(evt);
            }
        });

        createConductorBtn.setText("Create Conductor");
        createConductorBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createConductorBtnMouseClicked(evt);
            }
        });

        createScheduleBtn.setText("Create Schedule");
        createScheduleBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createScheduleBtnMouseClicked(evt);
            }
        });

        jLabel3.setText("Leaving Station");

        jLabel4.setText("Arriving Station");

        jLabel5.setText("StartHour:");

        jLabel6.setText("StopHour:");

        jLabel7.setText("First Name");

        jLabel8.setText("Last Name");

        jLabel9.setText("Train Name");

        tracksBetweenStationsBtn.setText("Get tracks between stations");
        tracksBetweenStationsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tracksBetweenStationsBtnMouseClicked(evt);
            }
        });

        trainsBetweenStationsBtn.setText("Get trains between stations");
        trainsBetweenStationsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trainsBetweenStationsBtnMouseClicked(evt);
            }
        });

        trainAtStationStart.setText("Train leaving from station at starhour");
        trainAtStationStart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trainAtStationStartMouseClicked(evt);
            }
        });

        trainsAtStationAtStopBtn.setText("Train arriving at station at stophour");
        trainsAtStationAtStopBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                trainsAtStationAtStopBtnMouseClicked(evt);
            }
        });

        schedulesForTrain.setText("Schedules for train");
        schedulesForTrain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                schedulesForTrainMouseClicked(evt);
            }
        });

        schedulesForConductor.setText("Schedules for conductor");
        schedulesForConductor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                schedulesForConductorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstNameTF))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startHourTF, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stopHourTF, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                    .addComponent(lastNameTF))
                .addContainerGap(137, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(trainsBetweenStationsBtn)
                        .addGap(18, 18, 18)
                        .addComponent(trainsAtStationAtStopBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)
                        .addComponent(schedulesForConductor, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tracksBetweenStationsBtn)
                        .addGap(18, 18, 18)
                        .addComponent(trainAtStationStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(schedulesForTrain, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(infoTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(conductorsBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(trainsBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tracksBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(stationsBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(trainNameTF))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(station1TF, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(station2TF, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(89, 89, 89)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(createTrainBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(createConductorBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(createScheduleBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pageNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(countTF, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(createTrackBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(createStationBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(infoTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stationsBtn)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pageNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createStationBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tracksBtn)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(trainsBtn)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(trainNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(conductorsBtn)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(station1TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(station2TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(countTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(createTrackBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createTrainBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createConductorBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createScheduleBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(startHourTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(stopHourTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(firstNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(lastNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tracksBetweenStationsBtn)
                    .addComponent(trainAtStationStart)
                    .addComponent(schedulesForTrain))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainsBetweenStationsBtn)
                    .addComponent(trainsAtStationAtStopBtn)
                    .addComponent(schedulesForConductor))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stationsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stationsBtnMouseClicked
        // TODO add your handling code here:
        
        int page = Integer.parseInt(this.pageNoTF.getText());
        int count = Integer.parseInt(this.countTF.getText());
        
        try {
            List<Station> list = this.manager.getStationsAt(page, count);
            this.infoTablePanel.populateWithStationList(list);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_stationsBtnMouseClicked

    private void tracksBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tracksBtnMouseClicked
        // TODO add your handling code here:
        
        int page = Integer.parseInt(this.pageNoTF.getText());
        int count = Integer.parseInt(this.countTF.getText());
        
        try {
            List<Track> list = this.manager.getTracksAt(page, count);
            this.infoTablePanel.populateWithTrackList(list);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_tracksBtnMouseClicked

    private void trainsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trainsBtnMouseClicked
        // TODO add your handling code here:
        
        
                int page = Integer.parseInt(this.pageNoTF.getText());
        int count = Integer.parseInt(this.countTF.getText());
        
        try {
            List<Train> list = this.manager.getTrainsAt(page, count);
            this.infoTablePanel.populateWithTrainList(list);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_trainsBtnMouseClicked

    private void conductorsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conductorsBtnMouseClicked
        // TODO add your handling code here:
        
        int page = Integer.parseInt(this.pageNoTF.getText());
        int count = Integer.parseInt(this.countTF.getText());
        
        try {
            List<Conductor> list = this.manager.getConductorsAt(page, count);
            this.infoTablePanel.populateWithConductorsList(list);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_conductorsBtnMouseClicked

    private void createStationBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createStationBtnMouseClicked
        // TODO add your handling code here:
        StationDialog.createSimpleWithListener(this, null);
    }//GEN-LAST:event_createStationBtnMouseClicked

    private void createTrackBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createTrackBtnMouseClicked
        // TODO add your handling code here:
        
        TrackDialog.createWithTrackAndListener(null, this);
    }//GEN-LAST:event_createTrackBtnMouseClicked

    private void createTrainBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createTrainBtnMouseClicked
        // TODO add your handling code here:
        TrainDialog.createWithListenerAndTrain(this, null);
    }//GEN-LAST:event_createTrainBtnMouseClicked

    private void createConductorBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createConductorBtnMouseClicked
        // TODO add your handling code here:
        ConductorDialog.createWithConductorAndListener(null, this);
    }//GEN-LAST:event_createConductorBtnMouseClicked

    private void createScheduleBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createScheduleBtnMouseClicked
        // TODO add your handling code here:
        ScheduleDialog.createWithListener(this);
    }//GEN-LAST:event_createScheduleBtnMouseClicked

    private void tracksBetweenStationsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tracksBetweenStationsBtnMouseClicked
        try {
            // TODO add your handling code here:
            
            int page = Integer.parseInt(this.pageNoTF.getText());
            int count = Integer.parseInt(this.countTF.getText());
            String st1 = this.station1TF.getText();
            String st2 = this.station2TF.getText();
            List<Track> list = this.manager.getTracksBetweenStations(st1, st2, page, count);
            this.infoTablePanel.populateWithTrackList(list);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_tracksBetweenStationsBtnMouseClicked

    private void trainsBetweenStationsBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trainsBetweenStationsBtnMouseClicked
        // TODO add your handling code here:
        
       try {
            // TODO add your handling code here:
            
            int page = Integer.parseInt(this.pageNoTF.getText());
            int count = Integer.parseInt(this.countTF.getText());
            String st1 = this.station1TF.getText();
            String st2 = this.station2TF.getText();
            List<Train> list = this.manager.getTrainsBetweenStations(st1, st2, page, count);
            this.infoTablePanel.populateWithTrainList(list);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_trainsBetweenStationsBtnMouseClicked

    private void trainAtStationStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trainAtStationStartMouseClicked
        try {
            // TODO add your handling code here:
            int page = Integer.parseInt(this.pageNoTF.getText());
            int count = Integer.parseInt(this.countTF.getText());
            int hour = Integer.parseInt(this.startHourTF.getText());
            String st = station1TF.getText();
            List<Train> list = this.manager.getTrainsLeavingFromStation(st, hour, page, count);
            this.infoTablePanel.populateWithTrainList(list);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_trainAtStationStartMouseClicked

    private void trainsAtStationAtStopBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trainsAtStationAtStopBtnMouseClicked
        // TODO add your handling code here:
        
         try {
            // TODO add your handling code here:
            int page = Integer.parseInt(this.pageNoTF.getText());
            int count = Integer.parseInt(this.countTF.getText());
            int hour = Integer.parseInt(this.stopHourTF.getText());
            String st = station2TF.getText();
            List<Train> list = this.manager.getTRainsArrivingAtStation(st, hour, page, count);
            this.infoTablePanel.populateWithTrainList(list);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_trainsAtStationAtStopBtnMouseClicked

    private void schedulesForTrainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_schedulesForTrainMouseClicked
        try {
            // TODO add your handling code here:
            int page = Integer.parseInt(this.pageNoTF.getText());
            int count = Integer.parseInt(this.countTF.getText());
            String trainName = this.trainNameTF.getText();
            List<TrainSchedule> list = this.manager.getSchedulesForTrain(trainName, page, count);
            this.infoTablePanel.populateWithSchedulesList(list);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_schedulesForTrainMouseClicked

    private void schedulesForConductorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_schedulesForConductorMouseClicked
        // TODO add your handling code here:
        
        try {
            // TODO add your handling code here:
            int page = Integer.parseInt(this.pageNoTF.getText());
            int count = Integer.parseInt(this.countTF.getText());
            String firstName = firstNameTF.getText();
            String lastName = this.lastNameTF.getText();
            List<TrainSchedule> list = this.manager.getSchedulesForConductor(firstName, lastName, page, count);
            this.infoTablePanel.populateWithSchedulesList(list);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_schedulesForConductorMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainAppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainAppFrame().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton conductorsBtn;
    private javax.swing.JTextField countTF;
    private javax.swing.JButton createConductorBtn;
    private javax.swing.JButton createScheduleBtn;
    private javax.swing.JButton createStationBtn;
    private javax.swing.JButton createTrackBtn;
    private javax.swing.JButton createTrainBtn;
    private javax.swing.JTextField firstNameTF;
    private views.InfoTablePanel infoTablePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField lastNameTF;
    private javax.swing.JTextField pageNoTF;
    private javax.swing.JButton schedulesForConductor;
    private javax.swing.JButton schedulesForTrain;
    private javax.swing.JTextField startHourTF;
    private javax.swing.JTextField station1TF;
    private javax.swing.JTextField station2TF;
    private javax.swing.JButton stationsBtn;
    private javax.swing.JTextField stopHourTF;
    private javax.swing.JButton tracksBetweenStationsBtn;
    private javax.swing.JButton tracksBtn;
    private javax.swing.JButton trainAtStationStart;
    private javax.swing.JTextField trainNameTF;
    private javax.swing.JButton trainsAtStationAtStopBtn;
    private javax.swing.JButton trainsBetweenStationsBtn;
    private javax.swing.JButton trainsBtn;
    // End of variables declaration//GEN-END:variables

    @Override
    public void infoTableDidSelectTrack(Track t) 
    {
        System.out.print("Creating track dialog");
       TrackDialog.createWithTrackAndListener(t, this);
    }

    @Override
    public void infoTableDidSelectTrain(Train t) 
    {
        TrainDialog.createWithListenerAndTrain(this, t);
    }

    @Override
    public void infoTableDidSelectConductor(Conductor c) 
    {
        ConductorDialog.createWithConductorAndListener(c, this);
    }

    @Override
    public void infoTableDidSelectStation(Station s) 
    {
        StationDialog.createSimpleWithListener(this, s);
    }

    @Override
    public void trackDialogDidEditTrack(Track t) 
    {
        try {
            this.manager.alterTrack(t);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void trackDialogDidCreateTrack(Track t) 
    {
        try {
            this.manager.insertNewTrack(t);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void stationDialogDidEditStation(Station st) 
    {
        try {
            this.manager.alterStation(st);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void stationDialogDidCreateStation(Station st) 
    {
        try {
            this.manager.insertNewStation(st);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void trainDialogDidEditTrain(Train t) 
    {
        try {
            this.manager.alterTrain(t);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void trainDialogDidCreateTrain(Train t) 
    {
        try {
            this.manager.insertNewTrain(t);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void conductorDialogDidCreateConductor(Conductor c) 
    {
        try {
            this.manager.insertNewConductor(c);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void conductorDialogDidEditConductor(Conductor c) 
    {
        try {
            this.manager.alterConductor(c);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void scheduleDialogDidCreateSchedule(TrainSchedule ts)
    {
        try {
            this.manager.insertNewSchedule(ts);
        } catch (Exception ex) {
            Logger.getLogger(MainAppFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
